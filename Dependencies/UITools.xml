<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UITools</name>
    </assembly>
    <members>
        <member name="T:UITools.ConfigurationMenu">
            <summary>
            All-in-One configuration menu for mods with categories
            </summary>
        </member>
        <member name="P:UITools.ConfigurationMenu.ContentSize">
            <summary>
            Size of content that you should use while generating content
            </summary>
        </member>
        <member name="M:UITools.ConfigurationMenu.Add(System.String,System.ValueTuple{System.String,System.Func{UnityEngine.Transform,UnityEngine.GameObject}}[])">
            <summary>
            Function that let you add submenu with categories in configuration window
            </summary>
            <param name="title">Title of your submenu (it shouldn't be too big)</param>
            <param name="buttons">
            Array of tuples of menu button name and function that generates content of menu and returns your content object (usually box).
            Transform is parent that you can use for content. You should use ContentSize as your content size.
            </param>
        </member>
        <member name="T:UITools.ModSettings`1">
            <summary>
            Abstract class that let you easily create your mod configuration
            </summary>
            <typeparam name="T">Data type which will be stored in config file</typeparam>
        </member>
        <member name="F:UITools.ModSettings`1.settings">
            <summary>
            Static variable for getting settings
            </summary>
        </member>
        <member name="P:UITools.ModSettings`1.SettingsFile">
            <summary>
            Getting settings file path
            </summary>
        </member>
        <member name="M:UITools.ModSettings`1.Initialize">
            <summary>
            You should call this function after creating an instance of class
            </summary>
        </member>
        <member name="M:UITools.ModSettings`1.RegisterOnVariableChange(System.Action)">
            <summary>
            Allow you to subscribe save event to config variables change
            </summary>
            <param name="onChange">Action that you should subscribe to data variables onChange</param>
        </member>
        <member name="T:UITools.UIToolsBuilder">
            <summary>
                Builder for advanced UITools elements
            </summary>
        </member>
        <member name="M:UITools.UIToolsBuilder.CreateNumberInput(UnityEngine.Transform,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
                Creates a number input with given parameters
            </summary>
        </member>
        <member name="T:UITools.NumberInput">
            <summary>
                Default input styled input for decimal number with arrow buttons
            </summary>
        </member>
        <member name="P:UITools.NumberInput.Value">
            <summary>
                Value of number input
            </summary>
        </member>
        <member name="P:UITools.NumberInput.Step">
            <summary>
                Step that will be used for change buttons
            </summary>
        </member>
        <member name="P:UITools.NumberInput.Size">
            <inheritdoc />
        </member>
        <member name="M:UITools.NumberInput.Init(UnityEngine.GameObject,UnityEngine.Transform)">
            <inheritdoc />
        </member>
        <member name="E:UITools.NumberInput.OnValueChangedEvent">
            <summary>
                Event that will be called every time float value changed
            </summary>
        </member>
        <member name="T:UITools.PositionSaver">
            <summary>
            Utility class that adds extra saving functionality
            </summary>
        </member>
        <member name="M:UITools.PositionSaver.RegisterPermanentSaving(SFS.UI.ModGUI.Window,System.String)">
            <summary>
            Allow you to register you window for saving that will save position even through game relaunch.
            You should call it every time you rebuild the window.
            Default saving function should be disabled!
            </summary>
            <param name="window">Window that will be saved</param>
            <param name="uniqueName">Unique name id which uses to find your window position</param>
            <example>
            The following code register window for permanent position saving
            <code>
            Window window = Builder.CreateWindow(..., savePosition: false);
            window.RegisterPermanentSaving("UITools.myAwesomeWindow");
            </code>
            </example>
        </member>
        <member name="T:UITools.UIExtensions">
            <summary>
            Class that provides some extra functionality for default 
            </summary>
        </member>
        <member name="M:UITools.UIExtensions.RegisterOnDropListener(SFS.UI.ModGUI.Window,System.Action)">
            <summary>
            Allow you to register some actions on window drop after dragging.
            </summary>
            <param name="window">The window for which the action will be subscribed</param>
            <param name="onDrop">Action that will be called every time the window is dropped</param>
            <example>
            The following code register writing message in the console every time window dropped
            <code>
            Window window = Builder.CreateWindow(...);
            window.RegisterOnDropListener(() => Debug.Log("Window is dropped!"));
            </code>
            </example>
        </member>
        <member name="T:UITools.Main">
            <summary>
            Main class of the mod
            </summary>
        </member>
        <member name="P:UITools.Main.ModNameID">
            <summary>NameID</summary>
        </member>
        <member name="P:UITools.Main.DisplayName">
            <summary>DisplayName</summary>
        </member>
        <member name="P:UITools.Main.Author">
            <summary>Author</summary>
        </member>
        <member name="P:UITools.Main.MinimumGameVersionNecessary">
            <summary>MinimumGameVersionNecessary</summary>
        </member>
        <member name="P:UITools.Main.ModVersion">
            <summary>ModVersion</summary>
        </member>
        <member name="P:UITools.Main.Description">
            <summary>Description</summary>
        </member>
        <member name="P:UITools.Main.IconLink">
            <summary>Icon</summary>
        </member>
        <member name="M:UITools.Main.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:UITools.Main.Early_Load">
            <summary>Early Load</summary>
        </member>
        <member name="T:UITools.GameObject_Local">
            <summary>
            Observable GameObject variable
            </summary>
        </member>
        <member name="M:UITools.GameObject_Local.IsEqual(UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>Comparison</summary>
        </member>
    </members>
</doc>
